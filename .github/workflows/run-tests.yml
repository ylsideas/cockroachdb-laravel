name: PHPUnit Tests

on:
  push:
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    if: github.event_name != 'schedule' || github.repository == 'ylsideas/cockroachdb-laravel'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.1, 8.2, 8.3 ]
        laravel: [ 10.*, 9.* ]
        cockroachdb: [ v22.2.17, v23.1.13 ]
        dependencies: [ stable, lowest ]
        include:
          - laravel: 10.*
            testbench: ^8.0
          - laravel: 9.*
            testbench: ^7.0
          - php: 8.2
            dependencies: lowest
            dotenv: ^5.5.0
            carbon: ^2.62.1
          - php: 8.3
            dependencies: lowest
            dotenv: ^5.5.0
            carbon: ^2.62.1


    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependencies }} - crdb.${{ matrix.cockroachdb }} ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run CockroachDB Service
        run: docker-compose up -d
        env:
          VERSION: ${{ matrix.cockroachdb }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql
          tools: composer:v2
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Require Laravel Version
        run: >
          composer require
          "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}"
          --no-interaction --no-update

      - name: Require Minimum Packages for version
        if: ${{ (matrix.php == '8.2' || matrix.php == '8.3') && matrix.dependencies == 'lowest' }}
        run: >
          composer require
          "vlucas/phpdotenv:${{ matrix.dotenv }}" "nesbot/carbon:${{ matrix.carbon }}"
          --no-interaction --no-update

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: ${{ matrix.composer-options }}

      - name: Configure Database
        run: |
          php ./database.php

      - name: Execute tests
        run: vendor/bin/pest
